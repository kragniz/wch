#!/usr/bin/env python
import os
import sys
import re
import subprocess
import json

LOG_FILE = '.wch'

class Wch(object):
    def check_filetype(self, f):
        filetypes = ['mkv', 'mp4', 'avi']
        return True in [f.endswith(filetype) for filetype in filetypes]

    def init_playlist(self, files):
        self.playlist = {f:False for f in files if self.check_filetype(f)}

    def save_playlist(self):
        json.dump(self.playlist, open(LOG_FILE, 'w'))

    def load_playlist(self):
        self.playlist = json.load(open(LOG_FILE))

    def sort_and_trim(self, d):
        return self._sort(f for f in d if not d[f])

    def _key(self, s):
        return [int(c) if c.isdigit()
                else c
                for c in re.split('([0-9]+)', s)][1:]

    def _sort(self, l):
        convert = lambda text: int(text) if text.isdigit() else text 
        alphanum = lambda key: [convert(c) for c in re.split('([0-9]+)', key)]
        return sorted(l, key=self._key)

    def mark_as_watched(self, n):
        m = max(self.playlist.values())
        self.playlist[n] = m + 1

    def next(self):
        n = self.sort_and_trim(self.playlist)[0]
        self.play(n)
        self.mark_as_watched(n)
        self.save_playlist()

    def previous(self):
        maxKey, maxVal = '', 0
        for k, v in self.playlist.iteritems():
            if v > maxVal:
                maxVal = v
                maxKey = k
        if not maxKey:
            maxKey = self.sort_and_trim(self.playlist)[0]
        self.playlist[maxKey] = False
        self.save_playlist()
        self.play(maxKey)

    def play(self, filename):
        print 'Playing', filename
        d = os.getcwd()
        path = os.path.join(d, filename)
        return subprocess.call(['mplayer', path],
                                stderr=subprocess.STDOUT,
                                stdout=subprocess.PIPE)

if __name__ == '__main__':
    args = sys.argv
    if len(args) > 1:
        w = Wch()
        if args[1] in ('next', 'n'):
            w.load_playlist()
            w.next()
        elif args[1] == 'init':
            if len(args) > 2:
                w.init_playlist(args[1:])
                w.save_playlist()
        else:
            print 'wch: "{}" is not a wch command'.format(args[1])
